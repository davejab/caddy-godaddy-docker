{{- range $version := .config.versions }}
	{{- $minor := $version.caddy_version | regexp.Replace `([0-9]+\.[0-9]+).*$` `$1` }}

	{{- range $variant := $.config.variants }}
		{{- $dir := filepath.Join $minor $variant.dir }}
		{{- test.Assert (print "Expected " $dir " to be a directory") (file.IsDir $dir) }}
		{{- if not (file.Exists (filepath.Join $dir ".skip")) }}
			{{- $template := "dockerfile" }}
			{{- if eq "builder" $variant.dir -}}
				{{ $template = "builder-dockerfile" -}}
			{{ end -}}
			{{- if strings.HasPrefix "windows-builder" $variant.dir -}}
				{{ $template = "windows-builder-dockerfile" -}}
			{{- else if strings.HasPrefix "windows" $variant.dir -}}
				{{ $template = "windows-dockerfile" -}}
			{{ end -}}
      {{- $ctx := dict "config" $version }}
			{{- $outPath := filepath.Join $dir "Dockerfile" -}}
Rendering {{ $outPath }} with template {{ $template }}...{{ "\n" -}}
      {{- tmpl.Exec $template $ctx | file.Write $outPath -}}
			{{- if eq "builder" $variant.dir -}}
				{{- $template = "caddy-builder" }}
				{{- $ctx := dict "config" $version }}
				{{- $outPath := filepath.Join $dir "caddy-builder.sh" -}}
Rendering {{ $outPath }} with template {{ $template }}...{{ "\n" -}}
				{{- tmpl.Exec $template $ctx | file.Write $outPath -}}
			{{ end -}}
		{{ end -}}
	{{- end }}
{{- end -}}
